<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.productName %> - Book Details</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        :root {
            --primary-color: #800000;
            --secondary-color: #f8f9fa;
            --text-color: #2d3436;
            --success-color: #00b894;
            --border-radius: 12px;
        }

        body {
            font-family: 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
            color: var(--text-color);
            background-color: var(--secondary-color);
        }

        .navbar {
            background-color: var(--primary-color);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .breadcrumbs {
            padding: 15px 20px;
            background-color: white;
            border-bottom: 1px solid #eee;
            font-size: 14px;
        }

        .breadcrumbs a {
            color: var(--primary-color);
            text-decoration: none;
            transition: color 0.3s;
        }

        .breadcrumbs a:hover {
            color: #b30000;
        }

        .product-container {
            max-width: 1300px;
            margin: 30px auto;
            padding: 30px;
            background-color: rgb(198, 193, 193);
            border-radius: var(--border-radius);
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        .image-gallery {
        background-color: #fff;
        padding: 20px;
        border-radius: var(--border-radius);
    }

    #imageZoom {
        width: 100%;
        height: 500px;
        position: relative;
        overflow: hidden;
        border-radius: var(--border-radius);
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        cursor: zoom-in;
    }

    #imageZoom img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.3s;
    }

    #imageZoom::after {
        content: '';
        display: var(--display);
        width: 200%;
        height: 200%;
        background-color: white;
        background-image: var(--url);
        background-repeat: no-repeat;
        background-size: 200%;
        background-position: var(--zoom-x) var(--zoom-y);
        position: absolute;
        left: 0;
        top: 0;
        pointer-events: none;
        border-radius: var(--border-radius);
        z-index: 1;
    }

    /* Zoom lens effect */
    #imageZoom:hover::after {
        opacity: 1;
        transition: opacity 0.3s ease;
    }


        .thumbnail-images {
            display: flex;
            gap: 10px;
            margin-top: 20px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: var(--border-radius);
        }

        .thumbnail-images img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            border: 2px solid transparent;
        }

        .thumbnail-images img:hover {
            transform: scale(1.05);
            border-color: var(--primary-color);
        }

        .product-details {
            padding-left: 30px;
        }

        .product-details h1 {
            color: var(--text-color);
            font-size: 32px;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .author, .publisher {
            color: #636e72;
            font-size: 16px;
            margin-bottom: 10px;
        }

        .ratings {
            display: flex;
            align-items: center;
            gap: 10px;
            margin: 15px 0;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: var(--border-radius);
        }

        .star-rating {
            color: #ffd700;
            font-size: 20px;
        }

        .price-section {
            margin: 20px 0;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: var(--border-radius);
        }

        .price {
            font-size: 28px;
            color: var(--primary-color);
            font-weight: 600;
        }

        .discounted-price {
            font-size: 18px;
            color: #b2bec3;
            text-decoration: line-through;
            margin-right: 10px;
        }

        .coupon {
            display: inline-block;
            margin-top: 10px;
            padding: 5px 10px;
            background-color: var(--success-color);
            color: white;
            border-radius: 5px;
            font-size: 14px;
        }

        .stock-status {
            margin: 15px 0;
            padding: 10px;
            border-radius: var(--border-radius);
            background-color: #f8f9fa;
        }

        .stock-status .in-stock {
            color: var(--success-color);
            font-weight: 500;
        }

        .stock-status .out-stock {
            color: #ff7675;
            font-weight: 500;
        }

        .quantity-input {
            width: 100px;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border: none;
            padding: 12px 25px;
            border-radius: 5px;
            transition: all 0.3s;
        }

        .btn-primary:hover {
            background-color: #b30000;
            transform: translateY(-2px);
        }

        .btn-wishlist {
            background-color: #fff;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            padding: 10px 20px;
            border-radius: 5px;
            transition: all 0.3s;
        }

        .btn-wishlist:hover {
            background-color: var(--primary-color);
            color: white;
        }

        .description {
            margin: 20px 0;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: var(--border-radius);
            line-height: 1.6;
        }

        .related-products {
    padding: 60px 0;
    background-color: #f8f9fa;
}

.section-header {
    text-align: center;
    margin-bottom: 40px;
}

.section-title {
    font-size: 32px;
    color: #2d3436;
    font-weight: 600;
    margin-bottom: 15px;
}

.section-divider {
    width: 80px;
    height: 3px;
    background-color: #800000;
    margin: 0 auto;
}

.book-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%;
}

.book-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.book-image {
    position: relative;
    padding-top: 130%;
    overflow: hidden;
}

.book-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.hover-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.book-card:hover .hover-overlay {
    opacity: 1;
}

.view-btn {
    padding: 10px 20px;
    background-color: #800000;
    color: white;
    text-decoration: none;
    border-radius: 25px;
    font-weight: 500;
    transform: translateY(20px);
    transition: all 0.3s ease;
}

.book-card:hover .view-btn {
    transform: translateY(0);
}

.view-btn:hover {
    background-color: #600000;
    color: white;
    text-decoration: none;
}

.book-info {
    padding: 20px;
}

.book-title {
    font-size: 18px;
    font-weight: 600;
    color: #2d3436;
    margin-bottom: 8px;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.book-author {
    color: #636e72;
    font-size: 14px;
    margin-bottom: 12px;
}

.book-price {
    font-size: 20px;
    color: #800000;
    font-weight: 600;
}

        @media (max-width: 768px) {
            .product-container {
                padding: 15px;
            }

            .product-details {
                padding-left: 0;
                margin-top: 20px;
            }

            #imageZoom {
                height: 300px;
            }
        }

        .related-products {
        padding: 40px 0;
    }
    
    .section-title {
        font-size: 24px;
    }
    
    .book-card {
        margin-bottom: 20px;
    }
    </style>
</head>
<body>
    <%- include("../../views/partials/user/header") %>
    
    <nav class="breadcrumbs">
        <div class="container">
            <a href="/">Home</a> &gt; 
            <a href="/products">Books</a> &gt; 
            <span><%= product.productName %></span>
        </div>
    </nav>

    <div class="product-container">
        <div class="row">
            <div class="col-md-6">
                <div class="image-gallery">
                    <div id="imageZoom" style="
                        --url: url('/uploads/product-images/<%= product.productImage[0] %>');
                        --zoom-x: 0%; --zoom-y: 0%;
                        --display: none;">
                        <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="Book Main Image">
                    </div>
                    <div class="thumbnail-images">
                        <% product.productImage.forEach((image, index) => { %>
                            <% if (index > 0) { %>
                                <img onclick="changeImage('/uploads/product-images/<%=image%>')" 
                                     src="/uploads/product-images/<%= image %>" 
                                     alt="Book Thumbnail <%= index %>">
                            <% } %>
                        <% }) %>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="product-details">
                    <h1><%= product.productName %></h1>
                    <p class="author">By <strong><%= product.author %></strong></p>
                    <p class="publisher">Publisher: <strong><%= product.publisher %></strong></p>

                    <div class="ratings">
                        <div class="star-rating">
                            <% for(let i = 1; i <= 5; i++) { %>
                                <i class="fas fa-star<%= i <= Math.floor(product.rating) ? '' : '-half-alt' %>"></i>
                            <% } %>
                        </div>
                        <span>(<%= product.rating %> / 5)</span>
                    </div>

                    <div class="stock-status">
                        <% if (product.quantity <= 0) { %>
                            <span class="out-stock"><i class="fas fa-times-circle"></i> Out of Stock</span>
                        <% } else { %>
                            <span class="in-stock"><i class="fas fa-check-circle"></i> In Stock</span>
                            <br>
                            <span class="in-stock"><%= product.quantity %> Stocks left</span>
                        <% } %>
                    </div>

                    <div class="price-section">
                        <% if (product.productOffer > 0) { %>
                            <% let productDiscountedPrice = product.salePrice - (product.salePrice * (product.productOffer / 100)); %>
                            <span class="discounted-price">₹<%= product.regularPrice %></span>
                            <span class="price">₹<%= productDiscountedPrice.toFixed(2) %></span>
                            <div class="coupon">
                                <i class="fas fa-tag"></i> SAVE <%= product.productOffer %>%
                            </div>
                        <% } else if (product.category && product.category.categoryOffer > 0) { %>
                            <% let categoryDiscountedPrice = product.salePrice - (product.salePrice * (product.category.categoryOffer / 100)); %>
                            <span class="discounted-price">₹<%= product.regularPrice %></span>
                            <span class="price">₹<%= categoryDiscountedPrice.toFixed(2) %></span>
                            <div class="coupon">
                                <i class="fas fa-tag"></i> SAVE <%= product.category.categoryOffer %>%
                            </div>
                        <% } else { %>
                            <span class="price">₹<%= product.salePrice %></span>
                        <% } %>
                    </div>

                    <div class="description">
                        <%= product.description %>
                    </div>

                    <div class="action-buttons">
                        <form id="addToCartForm" class="d-flex align-items-center">
                            <input type="hidden" name="productId" value="<%= product._id %>">
                            <% if (product.quantity <= 0) { %>
                                <p class="text-danger font-weight-bold mb-0">Sold Out</p>
                            <% } else { %>
                                <input type="number" 
                                       name="quantity" 
                                       value="1" 
                                       min="1" 
                                       max="<%= product.quantity %>" 
                                       class="quantity-input"
                                       required>
                                <button type="button" class="btn btn-primary" onclick="addToCart()">
                                    <i class="fas fa-shopping-cart"></i> Add to Cart
                                </button>
                            <% } %>
                        </form>
                        <button type="button" class="btn btn-wishlist" onclick="addToWishlist()">
                            <i class="fas fa-heart"></i> Wishlist
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="related-products">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">Related Books You May Like</h2>
                <div class="section-divider"></div>
            </div>
            <div class="row g-4">
                <% relatedProducts.forEach(product => { %>
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="book-card">
                            <div class="book-image">
                                <img src="/uploads/product-images/<%= product.productImage[0] %>" 
                                     alt="<%= product.productName %>"
                                     class="img-fluid">
                                <div class="hover-overlay">
                                    <a href="/product-details/<%= product._id %>" class="view-btn">
                                        View Details
                                    </a>
                                </div>
                            </div>
                            <div class="book-info">
                                <h3 class="book-title"><%= product.productName %></h3>
                                <p class="book-author">by <%= product.author %></p>
                                <div class="book-price">₹<%= product.salePrice %></div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <div id="product-data"
         data-available-stock="<%= product.quantity %>"
         data-product-id="<%= product._id %>">
    </div>

    <%- include("../../views/partials/user/footer") %>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>

  <div id="product-data"
    data-available-stock="<%= product.quantity %>"
    data-product-id="<%= product._id %>"></div>

<script>
    async function addToCart() {
    console.log("addtocart");

    const productData = document.getElementById('product-data');
    const availableStock = parseInt(productData.getAttribute('data-available-stock'), 10);
    const productId = productData.getAttribute('data-product-id');

    const quantityInput = document.querySelector('input[name="quantity"]');
    const quantity = parseInt(quantityInput.value, 10);

    console.log("Quantity:", quantity);
    console.log("Available Stock:", availableStock);

    if (quantity > availableStock) {
        Swal.fire({
            icon: 'error',
            title: 'Insufficient Stock',
            text: `Only ${availableStock} item(s) available in stock. Please reduce the quantity.`,
        });
        return;
    }

    if (quantity > 12) {
        Swal.fire({
            icon: 'error',
            title: 'Limit Exceeded',
            text: 'You can only add a maximum of 12 of the same product to the cart.',
        });
        return;
    }

    const data = {
        productId: productId,
        quantity: quantity,
    };

    try {
        const response = await fetch("/cart/add", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
        });

        if (response.ok) {
            console.log("Product added to cart successfully");
            Swal.fire({
                icon: 'success',
                title: 'Added to Cart!',
                text: `Successfully added ${quantity} item(s) to your cart.`,
            }).then(() => {
                window.location.href = "/cart"; 
            });
        } else {
            const errorData = await response.json();
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorData.message || 'An error occurred while adding the item to your cart.',
            });
        }
    } catch (error) {
        console.error("Error in addToCart function:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again later.',
        });
    }
}



    async function addToWishlist() {
    const productData = document.getElementById('product-data');
    const productId = productData.getAttribute('data-product-id');

    const data = { productId: productId }; 

    try {
        const response = await fetch("/wishlist/add", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            console.log("Product added to wishlist successfully");
            window.location.href = "/wishlist";
        } else {
            const errorData = await response.json();
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorData.message || 'An error occurred while adding the item to your wishlist.',
            });
        }
    } catch (error) {
        console.error("Error in addToWishlist function:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again later.',
        });
    }
}






let imageZoom = document.getElementById('imageZoom');
    
    // Enhanced zoom functionality
    imageZoom.addEventListener('mousemove', (event) => {
        const rect = imageZoom.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;
        
        // Calculate percentage positions
        const xPercent = (x / rect.width) * 100;
        const yPercent = (y / rect.height) * 100;
        
        // Apply zoom effect
        imageZoom.style.setProperty('--display', 'block');
        imageZoom.style.setProperty('--zoom-x', `${xPercent}%`);
        imageZoom.style.setProperty('--zoom-y', `${yPercent}%`);
    });

    imageZoom.addEventListener('mouseleave', () => {
        imageZoom.style.setProperty('--display', 'none');
    });

    // Enhanced image change function
    function changeImage(imageSrc) {
        const mainImage = imageZoom.querySelector('img');
        mainImage.src = imageSrc;
        imageZoom.style.setProperty('--url', `url('${imageSrc}')`);
        
        // Update active thumbnail visual
        const thumbnails = document.querySelectorAll('.thumbnail-images img');
        thumbnails.forEach(thumb => {
            if (thumb.src === imageSrc) {
                thumb.style.borderColor = 'var(--primary-color)';
            } else {
                thumb.style.borderColor = 'transparent';
            }
        });
    }

    // Initialize the first thumbnail as active
    window.addEventListener('load', () => {
        const firstImage = imageZoom.querySelector('img').src;
        imageZoom.style.setProperty('--url', `url('${firstImage}')`);
    });


  
  </script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
</body>
</html>
