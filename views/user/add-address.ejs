<!DOCTYPE html>
<html lang="en">
    <%- include("../../views/partials/user/header")%>

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Add Address</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f9f9f9;
                color: #333;
                margin: 0;
                padding: 0;
            }

            .container {
                max-width: 600px;
                margin: 40px auto;
                padding: 20px;
                background-color: #fff;
                border-radius: 8px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                border: 1px solid #ddd;
            }

            .header {
                text-align: center;
                color: #800000;
                margin-bottom: 20px;
            }

            .btn-maroon {
                background-color: #800000 !important;
                color: #fff !important;
                border: none;
            }

            .btn-maroon:hover {
                background-color: #a00000 !important;
            }

            label {
                font-weight: bold;
            }

            .error-message {
                color: red;
                font-size: 0.9em;
                display: none;
            }
        </style>
    </head>

    <body>

        <div class="container">
            <h2 class="header">Add New Address</h2>
            <form action="/add-address" method="POST" id="addressForm" novalidate>
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" class="form-control" required minlength="3" maxlength="100"
                        pattern="[A-Za-z\s]+" title="Only alphabetic characters and spaces are allowed.">
                    <small class="error-message" id="nameError">Name must contain only letters and spaces, with at least
                        3 characters.</small>
                </div>

                <div class="form-group">
                    <label for="addressType">Address Type:</label>
                    <select id="addressType" name="addressType" class="form-control" required>
                        <option value="">Select Address Type</option>
                        <option value="Home">Home</option>
                        <option value="Office">Office</option>
                    </select>
                    <small class="error-message" id="addressTypeError">Please select an address type.</small>
                </div>

                <div class="form-group">
                    <label for="streetName">Street Name:</label>
                    <input type="text" id="streetName" name="streetName" class="form-control" required>
                    <small class="error-message" id="streetNameError">Street name is required.</small>
                </div>

                <div class="form-group">
                    <label for="landmark">Landmark:</label>
                    <input type="text" id="landmark" name="landmark" class="form-control" required>
                    <small class="error-message" id="landmarkError">Landmark is required.</small>
                </div>

                <div class="form-group">
                    <label for="locality">Locality:</label>
                    <input type="text" id="locality" name="locality" class="form-control" required>
                    <small class="error-message" id="localityError">Locality is required.</small>
                </div>

                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" id="city" name="city" class="form-control" required>
                    <small class="error-message" id="cityError">City is required.</small>
                </div>

                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" id="state" name="state" class="form-control" required>
                    <small class="error-message" id="stateError">State is required.</small>
                </div>

                <div class="form-group">
                    <label for="pin">Pin Code:</label>
                    <input type="text" id="pin" name="pin" class="form-control" required pattern="^\d{6}$">
                    <small class="error-message" id="pinError">Pin code must be a 6-digit number.</small>
                </div>

                <div class="form-group">
                    <label for="contactNo">Contact Number:</label>
                    <input type="text" id="contactNo" name="contactNo" class="form-control" required pattern="^\d{10}$">
                    <small class="error-message" id="contactNoError">Contact number must be a 10-digit number.</small>
                </div>

                <button type="submit" class="btn btn-maroon btn-block">Add Address</button>
            </form>

            <div class="text-center mt-3">
                <a href="/profile" class="btn btn-link">Cancel</a>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script>
            const form = document.getElementById('addressForm');

            function validateField(fieldId, errorId, regex = null, errorMessage = 'This field is required.') {
                const field = document.getElementById(fieldId);
                const error = document.getElementById(errorId);
                const value = field.value.trim();

                if (!value || (regex && !regex.test(value))) {
                    error.textContent = errorMessage;
                    error.style.display = 'block';
                    return false;
                } else {
                    error.textContent = '';
                    error.style.display = 'none';
                    return true;
                }
            }

            function attachValidationListeners(fieldId, errorId, regex = null, errorMessage = 'This field is required.') {
                const field = document.getElementById(fieldId);

                field.addEventListener('blur', () => {
                    validateField(fieldId, errorId, regex, errorMessage);
                });

                field.addEventListener('input', () => {
                    validateField(fieldId, errorId, regex, errorMessage);
                });
            }

            attachValidationListeners('name', 'nameError', /^[A-Za-z\s]{3,}$/, 'Name must contain only letters and spaces, with at least 3 characters.');
            attachValidationListeners('addressType', 'addressTypeError', /.+/, 'Please select an address type.');
            attachValidationListeners('streetName', 'streetNameError');
            attachValidationListeners('landmark', 'landmarkError');
            attachValidationListeners('locality', 'localityError');
            attachValidationListeners('city', 'cityError');
            attachValidationListeners('state', 'stateError');
            attachValidationListeners('pin', 'pinError', /^\d{6}$/, 'Pin code must be a 6-digit number.');
            attachValidationListeners('contactNo', 'contactNoError', /^\d{10}$/, 'Contact number must be a 10-digit number.');

            form.addEventListener('submit', function (e) {
                let isValid = true;

                isValid &= validateField('name', 'nameError', /^[A-Za-z\s]{3,}$/, 'Name must contain only letters and spaces, with at least 3 characters.');
                isValid &= validateField('addressType', 'addressTypeError', /.+/, 'Please select an address type.');
                isValid &= validateField('streetName', 'streetNameError');
                isValid &= validateField('landmark', 'landmarkError');
                isValid &= validateField('locality', 'localityError');
                isValid &= validateField('city', 'cityError');
                isValid &= validateField('state', 'stateError');
                isValid &= validateField('pin', 'pinError', /^\d{6}$/, 'Pin code must be a 6-digit number.');
                isValid &= validateField('contactNo', 'contactNoError', /^\d{10}$/, 'Contact number must be a 10-digit number.');

                if (!isValid) {
                    e.preventDefault();
                }
            });
        </script>

    </body>

</html>